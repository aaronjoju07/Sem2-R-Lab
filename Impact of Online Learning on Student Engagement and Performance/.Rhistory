#Kurtosis
kurtosis(x_norm)
#Kurtosis
kur = kurtosis(x_norm)
plot(kur,frame = FALSE,col="green",main = "Density plot")
plot(kur,frame = FALSE,col="green",main = "Density plot")
hist(kur)
#Kurtosis
kurtosis(x_norm)
#install.packages("moments")
library(moments)
#positive Skew
a = c(40,41,42,43,50)
skewness(a)
den = density(a)
plot(den, frame = FALSE, col = "blue",main = "Density plot")
#Negative Skew
b = c(10,11,21,22,23,25)
skewness(b)
den = density(b)
plot(den,frame = FALSE,col="green",main = "Density plot")
#Normmal Distribution
set.seed(3548148)
x_norm = rnorm(5000)
head(x_norm)
#Hist & Density
hist(x_norm,prob=TRUE)
lines(density(x_norm),col=2,Iwd =3)
help("set.seed")
help("rnorm")
#Kurtosis
kurtosis(x_norm)
#Normmal Distribution
set.seed(3548148)
x_norm = rnorm(5000)
head(x_norm)
#Hist & Density
hist(x_norm,prob=TRUE)
lines(density(x_norm),col=2,Iwd =3)
#help("rnorm")
#Kurtosis
kurtosis(x_norm)
#Platykurtic
x=c(rep(61,each = 10),rep(64,each=18),rep(65,each=23),rep(67,each=32),rep(70,each=27),rep(73,each=17))
kurtosis(x)
hist(x)
#MesoKurtic
x=rnorm(100)
kurtosis(x)
hist(x)
#
data = mtcars
mean(data$mpg)
median(data$mpg)
hrsPow = data$hp
var(hrsPow)
s<-sqrt(sum((var-mean(var))^2/(length(var)-1)))
s<-sqrt(sum((hrsPow-mean(hrsPow))^2/(length(hrsPow)-1)))
s<-sqrt(sum((hrsPow-mean(hrsPow))^2/(length(hrsPow)-1)));s
skewness(data$disp)
plot(density(data$disp),col="blue",frame=FALSE,main = "Plot")
plot(density(data$disp),col="blue",frame=TRUE,main = "Plot")
FALSE
plot(density(data$disp),col="blue",frame=FALSE,main = "Plot")
#
kurtosis(data$carb)
#Frequency and Proportion
clytable = table(data$cyl)
clytable
amTable = table(data$am);amTable
#boxplot for mpg
boxplot(data$mpg,
main = "Displacement by Gear",
xlab = "Gear",
ylab = "Displacement")
#boxplot for mpg
boxplot(data$mpg,
main = "MPG",
xlab = "",
ylab = "")
#scatter plot
plot(data$hp,data$qsec)
help("t.test")
group1 <- rnorm(30, mean = 50, sd = 10)
group2 <- rnorm(25, mean = 55, sd = 12)
# Conduct a two-sample t-test
t_test_result <- t.test(group1, group2)
# Print the results
print(t_test_result)
before_training=c(22,20,19,24,25,25,28,22,30,27,24,18,16,19,19,28,24,25,25,23)
after_trainig=c(24,22,29,22,28,26,28,24,30,29,25,20,17,18,18,28,26,2727,24)
before_training=c(22,20,19,24,25,25,28,22,30,27,24,18,16,19,19,28,24,25,25,23)
after_trainig=c(24,22,29,22,28,26,28,24,30,29,25,20,17,18,18,28,26,2727,24)
x_diff = before_training - after_trainig
before_training=c(22,20,19,24,25,25,28,22,30,27,24,18,16,19,19,28,24,25,25,23)
after_trainig=c(24,22,29,22,28,26,28,24,30,29,25,20,17,18,18,28,26,27,27,24)
x_diff = before_training - after_trainig
maenDiff=mean(x_diff)
maenDiff=mean(x_diff);maenDiff
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
mean(x)
mean(y)
mean(z)
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
overallMean=mean(meanA+meanB+meanC)
overallMean=mean(meanA+meanB+meanC);overallMean
overallMean=(meanA+meanB+meanC);overallMean
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
overallMean=(meanA+meanB+meanC);overallMean
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
overallMean=meanA+meanB+meanC;overallMean
overallMean=meanA+meanB+meanC;mean(overallMean)
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
overall=meanA+meanB+meanC
varA=var(x)
varA=var(x);varA
overall = varA+varB+varC
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
varA=var(x)
varB=var(y)
varC=var(z)
overall = varA+varB+varC;overall
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
varA=var(meanA)
varB=var(meanB)
varC=var(meanC)
overall = varA+varB+varC;overall
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
xmean=mean(x)
ymean=mean(y)
zmean=mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
xmean=mean(x)
ymean=mean(y)
zmean=mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
################################################################################################
# Data
x <- c(10, 9, 8, 7.5, 8.5, 9, 10, 8, 8, 9)
y <- c(8, 9, 10, 8, 8.5, 7, 9.5, 9, 7, 10)
z <- c(9, 8, 7, 10, 9, 8, 7, 10, 9, 8)
# Means
xmean <- mean(x)
ymean <- mean(y)
zmean <- mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
# Variance for each group
variance_x <- sum((x - xmean)^2) / (length(x) - 1)
variance_y <- sum((y - ymean)^2) / (length(y) - 1)
variance_z <- sum((z - zmean)^2) / (length(z) - 1)
# Total variance between the samples
total_variance <- variance_x + variance_y + variance_z
# Print the results
cat("Variance for x:", variance_x, "\n")
#Step:1   Calculate the mean fro each group
a=c(6,8,4,5,3,4)
b=c(8,12,9,11,6,8)
c=c(13,9,11,8,7,12)
meanA=mean(a)
meanB=mean(b)
meanC=mean(c)
meanA=mean(a);meanA
meanB=mean(b);meanB
meanC=mean(c);meanC
#Step:2   Calculate the totlal mean.This done by adding all the mean and dividing it by total number of mean
total_mean = (meanA+meanB+meanC)/3;total_mean
#Step:1   Calculate the mean fro each group
a=c(6,8,4,5,3,4)
b=c(8,12,9,11,6,8)
c=c(13,9,11,8,7,12)
meanA=mean(a);meanA
meanB=mean(b);meanB
meanC=mean(c);meanC
#Step:2   Calculate the totlal mean.This done by adding all the mean and dividing it by total number of mean
total_mean = (meanA+meanB+meanC)/3;total_mean
#step:3.  Calculate the SSB
SSB = sum(c((meanA - total_mean)^2, (meanB - total_mean)^2, (meanC - total_mean)^2));SSB
#Step:4.  Calculate the between groups degree of freedom
k = 3  # Number of groups
df_between = k - 1;df_between
#step:3.  Calculate the SSB
SSB =6* sum(c((meanA - total_mean)^2, (meanB - total_mean)^2, (meanC - total_mean)^2));SSB
#step:5.  Calculate the SSE
SSE = sum(c(sum((a - meanA)^2), sum((b - meanB)^2), sum((c - meanC)^2)));SSE
#step6:   caluclate the degrees of freedom of errors
N = length(a) + length(b) + length(c)  # Total number of observations
df_within = N - k
df_within
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
install.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(broom)
library(broom)
library(tidyverse)
library(ggpubr)
library(tidyverse)
crop.data= read_csv("/Users/aaron/Downloads/crop.data.csv")
summart(crop.data)
summary(crop.data)
one.way = =adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way=adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way<-adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way<-aov(yield~fertilizer,data=crop.data)
summary(one.way)
two.way<-aov(yield~fertilizer+density,data=crop.data)
summary(two.way)
interaction<-aov(yield~fertilizer*density,data=crop.data)
summary(interaction())
summary(interaction)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="green")
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#speed is predicator variablw ands stopping Distance is Response Variable
x=cars$speed
y=cars$dist
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
#cal beta0 and beta1
beta_i_hat=sxy/sxx
beta0_hat=mean(y)-beta_i_hat*mean(x)
c(beta0_hat,beta_i_hat)
#possible x value in cars dataset
unique(cars$speed)
#possible x value in cars dataset
max(unique(cars$speed))
unique(cars$dist)
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#possible x value in cars dataset
range(unique(cars$speed))
range(unique(cars$dist))
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in%
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in% unique(cars$speed)
8 %in% unique(cars$speed)
min(cars$speed)<21 & 21>max(cars$speed)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#speed is predicator variablw ands stopping Distance is Response Variable
x=cars$speed
y=cars$dist
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
#cal beta0 and beta1
beta_i_hat=sxy/sxx
beta0_hat=mean(y)-beta_i_hat*mean(x)
c(beta0_hat,beta_i_hat)
#possible x value in cars dataset
range(unique(cars$speed))
range(unique(cars$dist))
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in% unique(cars$speed)
8 %in% unique(cars$speed)
min(cars$speed)<21 & 21>max(cars$speed)
min(cars$speed)<21 & 21<max(cars$speed)
#if x=50   which is not in dataset called interpolation 8%in% unique(cars$speed)
50 %in% unique(cars$speed)
min(cars$speed)<50 & 50<max(cars$speed)
#conside response =prediction+residual
cars[which(cars$speed==8)]
#conside response =prediction+residual
cars[which(cars$speed==8),]
#epsilon
16-(beta0_hat+beta_i_hat*8)
beta_i_hat
y_hat= beta0_hat+(beta_i_hat*x)
y_hat= beta0_hat+(beta_i_hat*x);y_hat
e=y-y_hat
e=y-y_hat;e
n=length(e)
n=length(e);n
s2_e=sum(e^2)/(n-2);s2_e
s_e=sqrt(s2_e);s_e
y
#calc sum od square error, total sum of square
SST=sum((y-mean(y))^2)
SSReg=sum((y_hat-mean(y))^2)
SSE=sum((y-y_hat)^2)
c(SST=SST,SSReg=SSReg,SSE=SSE)
#se2=SSE/n-2
SSE/(n-2)
s2_e==SSE/(n-2) #verify with previous calculated value
#Coefficient of determination R2 is the proprortion of observation variation in y in the regresion on the model
R2=SSReg/SST
#Coefficient of determination R2 is the proprortion of observation variation in y in the regresion on the model
R2=SSReg/SST;R2
#65% of observed variability in stopping
stop_dist_model = lm(dist(~speed,data=cars))
stop_dist_model
#65% of observed variability in stopping
stop_dist_model = lm(dist(~speed,data=cars))
stop_dist_model
#65% of observed variability in stopping
stop_dist_model = lm(dist~speed,data=cars)
stop_dist_model
c(beta0_hat,beta_i_hat)
plot(dist~speed,data = cars)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=20)
abline(stop_dist_model,lwd=3,col="black")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=2)
abline(stop_dist_model,lwd=3,col="black")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=15)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=1)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=4)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=9)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=5)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
# Two-sample t-test for preference by gender
gender_ttest <- t.test(data$Preference ~ data$Gender)
# One-way ANOVA for preference by education level
education_anova <- aov(Preference ~ Education_Level, data = data)
# Two-way ANOVA for preference by gender and education level
two_way_anova <- aov(Preference ~ Gender * Education_Level, data = data)
# Section 2 tests
# One-sample t-test for participation
participation_ttest <- t.test(data$Participation, mu = 0.5)
# Two-sample t-test for participation by collaborative activity frequency
collaboration_ttest <- t.test(data$Participation ~ data$Collaborative_Activity)
# One-way ANOVA for participation by education level
education_participation_anova <- aov(Participation ~ Education_Level, data = data)
# Two-way ANOVA for participation by education level and collaborative activity frequency
two_way_participation_anova <- aov(Participation ~ Education_Level * Collaborative_Activity, data = data)
# Print results
cat("\nSection 1 Tests:\n")
print(preference_ttest)
print(gender_ttest)
print(summary(education_anova))
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Impact of Online Learning on Student Engagement and Performance")
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
#
library(ggplot2)
# Install and load necessary packages
library(tidyverse)
# Assuming 'data' is your dataset
# Assuming 'data' is your dataset
data %>%
ggplot(aes(x = Gender, y = ..count.., fill = Do.you.prefer.online.learning.over.traditional.classroom.learning.)) +
geom_bar(stat="count", position="dodge") +
ggtitle("Grouped Bar Chart: Preference for Online Learning over Traditional by Gender") +
xlab("Gender") +
ylab("Count") +
theme(legend.position = "top")
# Assuming 'data' is your dataset
# Assuming 'data' is your dataset
data %>%
ggplot(aes(x = Gender, y = Do.you.prefer.online.learning.over.traditional.classroom.learning., fill = Gender)) +
geom_violin() +
ggtitle("Violin Plot: Preference for Online Learning over Traditional by Gender") +
xlab("Gender") +
ylab("Preference Score") +
theme(legend.position = "top")
cat("From the given graph, a higher proportion of female online learners prefer traditional learning, while a majority of male online learners have no preference.")
# Scatter plot for How frequently do you actively participate in virtual class discussions vs. How often do you engage in collaborative learning activities
ggplot(data, aes(x = How.frequently.do.you.actively.participate.in.virtual.class.discussions.,
y = How.often.do.you.engage.in.collaborative.learning.activities.with.your.peers.in.the.online.setting.,
size = Gender, color = Gender)) +
geom_point(alpha = 0.7) +
scale_size_manual(values = c(3, 5)) +
ggtitle("Virtual Class Discussions vs Collaborative Learning by Gender") +
xlab("Participation in Virtual Discussions") +
ylab("Engagement in Collaborative Learning") +
theme(legend.position = "top")
# Assuming 'data' is your dataset
# Assuming 'data' is your dataset
data %>%
ggplot(aes(x = Gender, y = Do.you.prefer.online.learning.over.traditional.classroom.learning., fill = Gender)) +
geom_violin() +
ggtitle("Violin Plot: Preference for Online Learning over Traditional by Gender") +
xlab("Gender") +
ylab("Preference Score") +
theme(legend.position = "top")
cat("From the given graph, a higher proportion of female online learners prefer traditional learning, while a majority of male online learners have no preference.")
# Scatter plot for How frequently do you actively participate in virtual class discussions vs. How often do you engage in collaborative learning activities
ggplot(data, aes(x = How.frequently.do.you.actively.participate.in.virtual.class.discussions.,
y = How.often.do.you.engage.in.collaborative.learning.activities.with.your.peers.in.the.online.setting.,
size = Gender, color = Gender)) +
geom_point(alpha = 0.7) +
scale_size_manual(values = c(3, 5)) +
ggtitle("Virtual Class Discussions vs Collaborative Learning by Gender") +
xlab("Participation in Virtual Discussions") +
ylab("Engagement in Collaborative Learning") +
theme(legend.position = "top")
