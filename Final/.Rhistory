overallMean=meanA+meanB+meanC;mean(overallMean)
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
overall=meanA+meanB+meanC
varA=var(x)
varA=var(x);varA
overall = varA+varB+varC
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
varA=var(x)
varB=var(y)
varC=var(z)
overall = varA+varB+varC;overall
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
meanA=mean(x)
meanB=mean(y)
meanC=mean(z)
varA=var(meanA)
varB=var(meanB)
varC=var(meanC)
overall = varA+varB+varC;overall
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
xmean=mean(x)
ymean=mean(y)
zmean=mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
x=c(10,9,8,7.5,8.5,9,10,8,8,9)
y=c(8,9,10,8,8.5,7,9.5,9,7,10)
z=c(9,8,7,10,9,8,7,10,9,8)
xmean=mean(x)
ymean=mean(y)
zmean=mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
################################################################################################
# Data
x <- c(10, 9, 8, 7.5, 8.5, 9, 10, 8, 8, 9)
y <- c(8, 9, 10, 8, 8.5, 7, 9.5, 9, 7, 10)
z <- c(9, 8, 7, 10, 9, 8, 7, 10, 9, 8)
# Means
xmean <- mean(x)
ymean <- mean(y)
zmean <- mean(z)
diffa=x-xmean
diffa
diffb=y-ymean
diffb
diffc=z-zmean
diffc
sqaurea=diffa*diffa
sum(sqaurea)
sqaureb=diffb*diffb
sum(sqaureb)
sqaurec=diffc*diffc
sum(sqaurec)
sum(sqaurea)+sum(sqaureb)+sum(sqaurec)
# Variance for each group
variance_x <- sum((x - xmean)^2) / (length(x) - 1)
variance_y <- sum((y - ymean)^2) / (length(y) - 1)
variance_z <- sum((z - zmean)^2) / (length(z) - 1)
# Total variance between the samples
total_variance <- variance_x + variance_y + variance_z
# Print the results
cat("Variance for x:", variance_x, "\n")
#Step:1   Calculate the mean fro each group
a=c(6,8,4,5,3,4)
b=c(8,12,9,11,6,8)
c=c(13,9,11,8,7,12)
meanA=mean(a)
meanB=mean(b)
meanC=mean(c)
meanA=mean(a);meanA
meanB=mean(b);meanB
meanC=mean(c);meanC
#Step:2   Calculate the totlal mean.This done by adding all the mean and dividing it by total number of mean
total_mean = (meanA+meanB+meanC)/3;total_mean
#Step:1   Calculate the mean fro each group
a=c(6,8,4,5,3,4)
b=c(8,12,9,11,6,8)
c=c(13,9,11,8,7,12)
meanA=mean(a);meanA
meanB=mean(b);meanB
meanC=mean(c);meanC
#Step:2   Calculate the totlal mean.This done by adding all the mean and dividing it by total number of mean
total_mean = (meanA+meanB+meanC)/3;total_mean
#step:3.  Calculate the SSB
SSB = sum(c((meanA - total_mean)^2, (meanB - total_mean)^2, (meanC - total_mean)^2));SSB
#Step:4.  Calculate the between groups degree of freedom
k = 3  # Number of groups
df_between = k - 1;df_between
#step:3.  Calculate the SSB
SSB =6* sum(c((meanA - total_mean)^2, (meanB - total_mean)^2, (meanC - total_mean)^2));SSB
#step:5.  Calculate the SSE
SSE = sum(c(sum((a - meanA)^2), sum((b - meanB)^2), sum((c - meanC)^2)));SSE
#step6:   caluclate the degrees of freedom of errors
N = length(a) + length(b) + length(c)  # Total number of observations
df_within = N - k
df_within
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
installed.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
install.packages(c("ggplot2","ggpubr","tidyverse","broom","AICcmodavg"))
library(AICcmodavg)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(broom)
library(broom)
library(tidyverse)
library(ggpubr)
library(tidyverse)
crop.data= read_csv("/Users/aaron/Downloads/crop.data.csv")
summart(crop.data)
summary(crop.data)
one.way = =adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way=adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way<-adv(yield~fertilizer,data=crop.data)
summary(one.way)
one.way<-aov(yield~fertilizer,data=crop.data)
summary(one.way)
two.way<-aov(yield~fertilizer+density,data=crop.data)
summary(two.way)
interaction<-aov(yield~fertilizer*density,data=crop.data)
summary(interaction())
summary(interaction)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="green")
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#speed is predicator variablw ands stopping Distance is Response Variable
x=cars$speed
y=cars$dist
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
#cal beta0 and beta1
beta_i_hat=sxy/sxx
beta0_hat=mean(y)-beta_i_hat*mean(x)
c(beta0_hat,beta_i_hat)
#possible x value in cars dataset
unique(cars$speed)
#possible x value in cars dataset
max(unique(cars$speed))
unique(cars$dist)
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#possible x value in cars dataset
range(unique(cars$speed))
range(unique(cars$dist))
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in%
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in% unique(cars$speed)
8 %in% unique(cars$speed)
min(cars$speed)<21 & 21>max(cars$speed)
?cars
View(cars)
str(cars)
dim(cars)
plot(dist~speed,data=cars,xlab="speed",ylab = "Stopping Distance",main="Stopping Distance VS Speed",pch=20,cex=2,col="blue")
#speed is predicator variablw ands stopping Distance is Response Variable
x=cars$speed
y=cars$dist
#Least Square Method
sxy=sum((x-mean(x))*(y-mean(y)))
sxx=sum((x-mean(x))^2)
syy=sum((y-mean(y))^2)
c(sxy,sxx,syy)
#cal beta0 and beta1
beta_i_hat=sxy/sxx
beta0_hat=mean(y)-beta_i_hat*mean(x)
c(beta0_hat,beta_i_hat)
#possible x value in cars dataset
range(unique(cars$speed))
range(unique(cars$dist))
#makiing a prediction of distance for the speed 8 miles per hour
beta0_hat+beta_i_hat*8
#if x=21   which is not in dataset called interpolation 8%in% unique(cars$speed)
21 %in% unique(cars$speed)
8 %in% unique(cars$speed)
min(cars$speed)<21 & 21>max(cars$speed)
min(cars$speed)<21 & 21<max(cars$speed)
#if x=50   which is not in dataset called interpolation 8%in% unique(cars$speed)
50 %in% unique(cars$speed)
min(cars$speed)<50 & 50<max(cars$speed)
#conside response =prediction+residual
cars[which(cars$speed==8)]
#conside response =prediction+residual
cars[which(cars$speed==8),]
#epsilon
16-(beta0_hat+beta_i_hat*8)
beta_i_hat
y_hat= beta0_hat+(beta_i_hat*x)
y_hat= beta0_hat+(beta_i_hat*x);y_hat
e=y-y_hat
e=y-y_hat;e
n=length(e)
n=length(e);n
s2_e=sum(e^2)/(n-2);s2_e
s_e=sqrt(s2_e);s_e
y
#calc sum od square error, total sum of square
SST=sum((y-mean(y))^2)
SSReg=sum((y_hat-mean(y))^2)
SSE=sum((y-y_hat)^2)
c(SST=SST,SSReg=SSReg,SSE=SSE)
#se2=SSE/n-2
SSE/(n-2)
s2_e==SSE/(n-2) #verify with previous calculated value
#Coefficient of determination R2 is the proprortion of observation variation in y in the regresion on the model
R2=SSReg/SST
#Coefficient of determination R2 is the proprortion of observation variation in y in the regresion on the model
R2=SSReg/SST;R2
#65% of observed variability in stopping
stop_dist_model = lm(dist(~speed,data=cars))
stop_dist_model
#65% of observed variability in stopping
stop_dist_model = lm(dist(~speed,data=cars))
stop_dist_model
#65% of observed variability in stopping
stop_dist_model = lm(dist~speed,data=cars)
stop_dist_model
c(beta0_hat,beta_i_hat)
plot(dist~speed,data = cars)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=20)
abline(stop_dist_model,lwd=3,col="black")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=2)
abline(stop_dist_model,lwd=3,col="black")
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=15)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=1)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=4)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=9)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=5)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
stop_dist_model$residuals
coef(stop_dist_model)
resid(stop_dist_model)
fitted(stop_dist_model)
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Final")
read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Final")
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
# One-sample t-test for preference
one_sample_t_test_result <- t.test(data$PreferenceVariable, mu = 0)
# Two-sample t-test for gender differences
two_sample_t_test_result <- t.test(PreferenceVariable ~ GenderVariable, data = data)
# One-way ANOVA for education level differences
one_way_anova_result <- aov(PreferenceVariable ~ EducationLevelVariable, data = data)
# Two-way ANOVA for interaction effect
two_way_anova_result <- aov(PreferenceVariable ~ GenderVariable * EducationLevelVariable, data = data)
# One-sample t-test for active participation
one_sample_t_test_participation <- t.test(data$ParticipationVariable, mu = 0)
# Two-sample t-test for collaboration differences
two_sample_t_test_collaboration <- t.test(ActiveParticipationVariable ~ CollaborationVariable, data = data)
# One-way ANOVA for education level differences
one_way_anova_collaboration <- aov(ActiveParticipationVariable ~ EducationLevelVariable, data = data)
# Two-way ANOVA for interaction effect
two_way_anova_collaboration <- aov(ActiveParticipationVariable ~ CollaborationVariable * EducationLevelVariable, data = data)
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Final")
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# Load necessary libraries
library(tidyverse)
# Convert categorical variables to factors
data$GenderVariable <- as.factor(data$GenderVariable)
data$EducationLevelVariable <- as.factor(data$EducationLevelVariable)
# One-sample t-test for preference
one_sample_t_test_result <- t.test(data$PreferenceVariable, mu = 0)
# Two-sample t-test for gender differences
two_sample_t_test_result <- t.test(PreferenceVariable ~ GenderVariable, data = data)
# One-way ANOVA for education level differences
one_way_anova_result <- aov(PreferenceVariable ~ EducationLevelVariable, data = data)
# Two-way ANOVA for interaction effect
two_way_anova_result <- aov(PreferenceVariable ~ GenderVariable * EducationLevelVariable, data = data)
# Convert categorical variables to factors
data$CollaborationVariable <- as.factor(data$CollaborationVariable)
# One-sample t-test for active participation
one_sample_t_test_participation <- t.test(data$ParticipationVariable, mu = 0)
# Two-sample t-test for collaboration differences
two_sample_t_test_collaboration <- t.test(ActiveParticipationVariable ~ CollaborationVariable, data = data)
# One-way ANOVA for education level differences
one_way_anova_collaboration <- aov(ActiveParticipationVariable ~ EducationLevelVariable, data = data)
# Two-way ANOVA for interaction effect
two_way_anova_collaboration <- aov(ActiveParticipationVariable ~ CollaborationVariable * EducationLevelVariable, data = data)
# Load necessary libraries
library(tidyverse)
# Convert categorical variables to factors
data$GenderVariable <- as.factor(data$GenderVariable)
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Final")
#data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# Load required libraries
library(tidyverse)
library(car)
# Read your dataset (replace "your_dataset.csv" with your actual file path)
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# One-sample t-test for preference
t.test(data$Preference, mu = 0, alternative = "two.sided")
# Two-sample t-test for preference between male and female participants
t.test(Preference ~ Gender, data = data)
# One-way ANOVA for preference among different education levels
aov_result <- aov(Preference ~ EducationLevel, data = data)
summary(aov_result)
# Two-way ANOVA for interaction effect between gender and education level on preference
aov_result_interaction <- aov(Preference ~ Gender * EducationLevel, data = data)
summary(aov_result_interaction)
# One-sample t-test for discussion participation
t.test(data$DiscussionParticipation, mu = 0, alternative = "two.sided")
# Two-sample t-test for discussion participation between those with and without collaborative activities
t.test(DiscussionParticipation ~ CollaborativeActivities, data = data)
# One-way ANOVA for collaboration engagement among different education levels
aov_result_collaboration <- aov(CollaborativeActivities ~ EducationLevel, data = data)
summary(aov_result_collaboration)
# Two-way ANOVA for interaction effect between discussion participation and education level
aov_result_interaction_collab <- aov(DiscussionParticipation ~ EducationLevel * CollaborativeActivities, data = data)
summary(aov_result_interaction_collab)
#data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# Load required libraries
library(tidyverse)
library(car)
# Read your dataset (replace "your_dataset.csv" with your actual file path)
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# One-sample t-test for preference
t.test(data$Preference, mu = 0, alternative = "two.sided")
# Two-sample t-test for preference between male and female participants
t.test(Preference ~ Gender, data = data)
# Generate a sample dataset
set.seed(123)
data <- data.frame(
"Frequency" = sample(c("Less than 2 times", "2-3 times", "4-5 times", "More than 5 times"), 100, replace = TRUE),
"Gender" = sample(c("Male", "Female"), 100, replace = TRUE),
"Education_Level" = sample(c("High School", "Undergraduate", "Postgraduate"), 100, replace = TRUE),
"Engagement_Duration" = sample(1:5, 100, replace = TRUE),
"Preference" = sample(c("Strongly prefer online", "Prefer online", "No preference", "Prefer traditional", "Strongly prefer traditional"), 100, replace = TRUE),
"Participation_Frequency" = sample(c("Rarely", "Occasionally", "Frequently", "Always"), 100, replace = TRUE),
"Collaborative_Activities" = sample(c("Rarely", "Occasionally", "Frequently", "Always"), 100, replace = TRUE)
)
# Section 1: Frequency and Preference
# One-sample t-test for preference
t.test(data$Engagement_Duration, mu = 3)
# Two-sample t-test for preference between male and female
t.test(Engagement_Duration ~ Gender, data = data)
# One-way ANOVA for preference among different education levels
anova(lm(Engagement_Duration ~ Education_Level, data = data))
# Two-way ANOVA for interaction effect between gender and education level on preference
anova(lm(Engagement_Duration ~ Gender * Education_Level, data = data))
# Section 2: Participation and Collaboration in Online Learning
# One-sample t-test for participation frequency
t.test(data$Participation_Frequency, mu = 3)
# Two-sample t-test for participation frequency between those with and without collaborative activities
t.test(Participation_Frequency ~ Collaborative_Activities, data = data)
# One-way ANOVA for engagement in collaborative activities among different education levels
anova(lm(Collaborative_Activities ~ Education_Level, data = data))
# Two-way ANOVA for interaction effect between participation frequency and education level on online learning experience
anova(lm(Collaborative_Activities ~ Participation_Frequency * Education_Level, data = data))
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
setwd("/Users/aaron/Desktop/Sem2-R-Lab/Final")
data = read.csv("Impact of Online Learning on Student Engagement and Performance .csv")
# Load libraries
library(tidyverse)
library(car)
library(rstatix)
# Assuming your dataset is named 'data'
# Make sure to install and load necessary packages before running the code
# Install if not already installed
# install.packages(c("tidyverse", "car", "rstatix"))
install.packages(c(rstatix))
# Assuming your dataset is named 'data'
# Make sure to install and load necessary packages before running the code
# Install if not already installed
# install.packages(c("tidyverse", "car", "rstatix"))
install.packages(c('rstatix'))
install.packages(c("rstatix"))
# Assuming your dataset is named 'data'
# Make sure to install and load necessary packages before running the code
# Install if not already installed
# install.packages(c("tidyverse", "car", "rstatix"))
#install.packages(c('rstatix'))
# Load libraries
library(tidyverse)
library(car)
# Assuming your dataset is named 'data'
# Make sure to install and load necessary packages before running the code
# Install if not already installed
install.packages(c("tidyverse", "car", "rstatix"))
install.packages(c("tidyverse", "car", "rstatix"))
#install.packages(c('rstatix'))
# Load libraries
library(tidyverse)
library(car)
library(rstatix)
# Convert factors to appropriate levels if needed
data$Gender <- as.factor(data$Gender)
data$Education_Level <- factor(data$Education_Level, ordered = TRUE)
data$How_long <- factor(data$How_long, ordered = TRUE)
data$How_often <- factor(data$How_often, ordered = TRUE)
data$Preference <- factor(data$Preference, ordered = TRUE)
data$Participation <- factor(data$Participation, ordered = TRUE)
# Section 1 tests
# One-sample t-test for preference
preference_ttest <- t.test(data$Preference, mu = 0.5)
# Two-sample t-test for preference by gender
gender_ttest <- t.test(data$Preference ~ data$Gender)
# One-way ANOVA for preference by education level
education_anova <- aov(Preference ~ Education_Level, data = data)
# Two-way ANOVA for preference by gender and education level
two_way_anova <- aov(Preference ~ Gender * Education_Level, data = data)
# Section 2 tests
# One-sample t-test for participation
participation_ttest <- t.test(data$Participation, mu = 0.5)
# Two-sample t-test for participation by collaborative activity frequency
collaboration_ttest <- t.test(data$Participation ~ data$Collaborative_Activity)
# One-way ANOVA for participation by education level
education_participation_anova <- aov(Participation ~ Education_Level, data = data)
# Two-way ANOVA for participation by education level and collaborative activity frequency
two_way_participation_anova <- aov(Participation ~ Education_Level * Collaborative_Activity, data = data)
# Print results
cat("\nSection 1 Tests:\n")
print(preference_ttest)
print(gender_ttest)
print(summary(education_anova))
print(summary(two_way_anova))
cat("\nSection 2 Tests:\n")
print(participation_ttest)
print(collaboration_ttest)
print(summary(education_participation_anova))
print(summary(two_way_participation_anova))
# Section 1 tests
# One-sample t-test for preference
preference_ttest <- t.test(data$Preference, mu = 0.5)
# Convert factors to appropriate levels if needed
data$Gender <- as.factor(data$Gender)
data$Education_Level <- factor(data$Education_Level, ordered = TRUE)
data$How_long <- factor(data$How_long, ordered = TRUE)
data$How_often <- factor(data$How_often, ordered = TRUE)
data$Preference <- factor(data$Preference, ordered = TRUE)
data$Participation <- factor(data$Participation, ordered = TRUE)
# Section 1 tests
# One-sample t-test for preference
data$Preference <- as.numeric(data$Preference)
